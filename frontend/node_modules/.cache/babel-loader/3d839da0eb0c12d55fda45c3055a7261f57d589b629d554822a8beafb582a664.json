{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taariq\\\\Documents\\\\Projects\\\\Git_Folder\\\\Expense_Tracker_Project\\\\frontend\\\\src\\\\pages\\\\NavigationBar.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NavigationBar = ({\n  navigation,\n  setNavigation,\n  openModal,\n  link\n}) => {\n  _s();\n  let classname = {\n    selected: \"item-selected\",\n    notSelected: \"item-notSelected\"\n  };\n\n  //   console.log(navigation[0]?.current);\n\n  const urlCheck = () => {\n    if (link && navigation) {\n      if (link === navigation[0].href) {\n        navigation[0].current = true;\n      } else {\n        navigation[0].current = false;\n      }\n    }\n  };\n  urlCheck();\n  const navigate = useNavigate();\n  const handleClick = (clickedItem, e) => {\n    e.preventDefault();\n    // Update the state to mark the clicked item as current\n    setNavigation(prevNavigation => prevNavigation.map(item => ({\n      ...item,\n      current: item.name === clickedItem.name\n    })));\n    if (clickedItem.name === \"Add Expense Folder\") {\n      openModal(true);\n    }\n    if (clickedItem.name === \"Dashboard\") {\n      navigate(navigation[0].href);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"navigation-bar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-bar-items-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navigation-bar-items\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navigation-items\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"items\",\n              children: navigation.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n                href: item.href,\n                className: item.current ? classname.selected : classname.notSelected,\n                \"aria-current\": item.current ? \"page\" : undefined,\n                onClick: e => handleClick(item, e),\n                children: item.name\n              }, item.name, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(NavigationBar, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = NavigationBar;\nexport default NavigationBar;\nvar _c;\n$RefreshReg$(_c, \"NavigationBar\");","map":{"version":3,"names":["React","useNavigate","jsxDEV","_jsxDEV","NavigationBar","navigation","setNavigation","openModal","link","_s","classname","selected","notSelected","urlCheck","href","current","navigate","handleClick","clickedItem","e","preventDefault","prevNavigation","map","item","name","className","children","undefined","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Taariq/Documents/Projects/Git_Folder/Expense_Tracker_Project/frontend/src/pages/NavigationBar.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst NavigationBar = ({ navigation, setNavigation, openModal, link }) => {\r\n  let classname = {\r\n    selected: \"item-selected\",\r\n    notSelected: \"item-notSelected\",\r\n  };\r\n\r\n  //   console.log(navigation[0]?.current);\r\n\r\n  const urlCheck = () => {\r\n    if (link && navigation) {\r\n      if (link === navigation[0].href) {\r\n        navigation[0].current = true;\r\n      } else {\r\n        navigation[0].current = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  urlCheck();\r\n  const navigate = useNavigate();\r\n\r\n  const handleClick = (clickedItem, e) => {\r\n    e.preventDefault();\r\n    // Update the state to mark the clicked item as current\r\n    setNavigation((prevNavigation) =>\r\n      prevNavigation.map((item) => ({\r\n        ...item,\r\n        current: item.name === clickedItem.name,\r\n      }))\r\n    );\r\n\r\n    if (clickedItem.name === \"Add Expense Folder\") {\r\n      openModal(true);\r\n    }\r\n\r\n    if (clickedItem.name === \"Dashboard\") {\r\n      navigate(navigation[0].href);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <nav className=\"navigation-bar-container\">\r\n      <div className=\"navigation-bar\">\r\n        <div className=\"navigation-bar-items-container\">\r\n          <div className=\"navigation-bar-items\">\r\n            <div className=\"navigation-items\">\r\n              <div className=\"items\">\r\n                {navigation.map((item) => (\r\n                  <a\r\n                    key={item.name}\r\n                    href={item.href}\r\n                    className={\r\n                      item.current ? classname.selected : classname.notSelected\r\n                    }\r\n                    aria-current={item.current ? \"page\" : undefined}\r\n                    onClick={(e) => handleClick(item, e)}\r\n                  >\r\n                    {item.name}\r\n                  </a>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}