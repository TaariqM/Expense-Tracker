{"ast":null,"code":"function signUpValidation(values) {\n  let errors = {\n    noUppercaseChar: \"\",\n    noNumericalChar: \"\",\n    noSpecialChar: \"\",\n    badLength: \"\",\n    isEmptyPass: \"\",\n    isEmptyEmail: \"\",\n    improperEmail: \"\",\n    noFirstname: \"\",\n    noLastname: \"\"\n  };\n  const emailPattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+\\.[a-zA-Z]$/;\n  const upperCase = /^[A-Z]$/;\n  const specialChar = /^[!@#$%^&*]$/;\n  const numericalChar = /^[0-9]$/;\n  if (values.email === \"\") {\n    errors.isEmptyEmail = \"Email Cannot Be Empty\";\n  } else if (!emailPattern.test(values.email)) {\n    errors.improperEmail = \"Email is not proper\";\n  }\n  if (values.firstname === \"\") {\n    errors.noFirstname = \"Please enter your first name\";\n  }\n  if (values.lastname === \"\") {\n    errors.noLastname = \"Please enter your last name\";\n  }\n  if (values.password === \"\") {\n    errors.noUppercaseChar = \"Password must contain at least one uppercase letter\";\n    errors.noNumericalChar = \"Password must contain at least one numerical value\";\n    errors.noSpecialChar = \"Password must contain at least one special character\";\n    errors.badLength = \"Password must be minimum 8 characters long\";\n  } else if (!upperCase.test(values.password)) {\n    errors.noUppercaseChar = \"Password must contain at least one uppercase letter\";\n  } else if (!specialChar.test(values.password)) {\n    errors.noSpecialChar = \"Password must contain at least one special character\";\n  } else if (!numericalChar.test(values.password)) {\n    errors.noNumericalChar = \"Password must contain at least one numerical value\";\n  } else if (values.password.length < 8) {\n    errors.badLength = \"Password must be minimum 8 characters long\";\n  }\n  return errors;\n}\nexport default signUpValidation;","map":{"version":3,"names":["signUpValidation","values","errors","noUppercaseChar","noNumericalChar","noSpecialChar","badLength","isEmptyPass","isEmptyEmail","improperEmail","noFirstname","noLastname","emailPattern","upperCase","specialChar","numericalChar","email","test","firstname","lastname","password","length"],"sources":["C:/Users/Taariq/Documents/Projects/Expense_Tracker_Project/frontend/src/validation/SignUpValidation.js"],"sourcesContent":["function signUpValidation(values) {\r\n  let errors = {\r\n    noUppercaseChar: \"\",\r\n    noNumericalChar: \"\",\r\n    noSpecialChar: \"\",\r\n    badLength: \"\",\r\n    isEmptyPass: \"\",\r\n    isEmptyEmail: \"\",\r\n    improperEmail: \"\",\r\n    noFirstname: \"\",\r\n    noLastname: \"\",\r\n  };\r\n\r\n  const emailPattern = /^[a-zA-Z0-9_.-]+@[a-zA-Z]+\\.[a-zA-Z]$/;\r\n  const upperCase = /^[A-Z]$/;\r\n  const specialChar = /^[!@#$%^&*]$/;\r\n  const numericalChar = /^[0-9]$/;\r\n\r\n  if (values.email === \"\") {\r\n    errors.isEmptyEmail = \"Email Cannot Be Empty\";\r\n  } else if (!emailPattern.test(values.email)) {\r\n    errors.improperEmail = \"Email is not proper\";\r\n  }\r\n\r\n  if (values.firstname === \"\") {\r\n    errors.noFirstname = \"Please enter your first name\";\r\n  }\r\n\r\n  if (values.lastname === \"\") {\r\n    errors.noLastname = \"Please enter your last name\";\r\n  }\r\n\r\n  if (values.password === \"\") {\r\n    errors.noUppercaseChar =\r\n      \"Password must contain at least one uppercase letter\";\r\n    errors.noNumericalChar =\r\n      \"Password must contain at least one numerical value\";\r\n    errors.noSpecialChar =\r\n      \"Password must contain at least one special character\";\r\n    errors.badLength = \"Password must be minimum 8 characters long\";\r\n  } else if (!upperCase.test(values.password)) {\r\n    errors.noUppercaseChar =\r\n      \"Password must contain at least one uppercase letter\";\r\n  } else if (!specialChar.test(values.password)) {\r\n    errors.noSpecialChar =\r\n      \"Password must contain at least one special character\";\r\n  } else if (!numericalChar.test(values.password)) {\r\n    errors.noNumericalChar =\r\n      \"Password must contain at least one numerical value\";\r\n  } else if (values.password.length < 8) {\r\n    errors.badLength = \"Password must be minimum 8 characters long\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default signUpValidation;\r\n"],"mappings":"AAAA,SAASA,gBAAgBA,CAACC,MAAM,EAAE;EAChC,IAAIC,MAAM,GAAG;IACXC,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE,EAAE;IACjBC,SAAS,EAAE,EAAE;IACbC,WAAW,EAAE,EAAE;IACfC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE;EACd,CAAC;EAED,MAAMC,YAAY,GAAG,uCAAuC;EAC5D,MAAMC,SAAS,GAAG,SAAS;EAC3B,MAAMC,WAAW,GAAG,cAAc;EAClC,MAAMC,aAAa,GAAG,SAAS;EAE/B,IAAId,MAAM,CAACe,KAAK,KAAK,EAAE,EAAE;IACvBd,MAAM,CAACM,YAAY,GAAG,uBAAuB;EAC/C,CAAC,MAAM,IAAI,CAACI,YAAY,CAACK,IAAI,CAAChB,MAAM,CAACe,KAAK,CAAC,EAAE;IAC3Cd,MAAM,CAACO,aAAa,GAAG,qBAAqB;EAC9C;EAEA,IAAIR,MAAM,CAACiB,SAAS,KAAK,EAAE,EAAE;IAC3BhB,MAAM,CAACQ,WAAW,GAAG,8BAA8B;EACrD;EAEA,IAAIT,MAAM,CAACkB,QAAQ,KAAK,EAAE,EAAE;IAC1BjB,MAAM,CAACS,UAAU,GAAG,6BAA6B;EACnD;EAEA,IAAIV,MAAM,CAACmB,QAAQ,KAAK,EAAE,EAAE;IAC1BlB,MAAM,CAACC,eAAe,GACpB,qDAAqD;IACvDD,MAAM,CAACE,eAAe,GACpB,oDAAoD;IACtDF,MAAM,CAACG,aAAa,GAClB,sDAAsD;IACxDH,MAAM,CAACI,SAAS,GAAG,4CAA4C;EACjE,CAAC,MAAM,IAAI,CAACO,SAAS,CAACI,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,EAAE;IAC3ClB,MAAM,CAACC,eAAe,GACpB,qDAAqD;EACzD,CAAC,MAAM,IAAI,CAACW,WAAW,CAACG,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,EAAE;IAC7ClB,MAAM,CAACG,aAAa,GAClB,sDAAsD;EAC1D,CAAC,MAAM,IAAI,CAACU,aAAa,CAACE,IAAI,CAAChB,MAAM,CAACmB,QAAQ,CAAC,EAAE;IAC/ClB,MAAM,CAACE,eAAe,GACpB,oDAAoD;EACxD,CAAC,MAAM,IAAIH,MAAM,CAACmB,QAAQ,CAACC,MAAM,GAAG,CAAC,EAAE;IACrCnB,MAAM,CAACI,SAAS,GAAG,4CAA4C;EACjE;EAEA,OAAOJ,MAAM;AACf;AAEA,eAAeF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}