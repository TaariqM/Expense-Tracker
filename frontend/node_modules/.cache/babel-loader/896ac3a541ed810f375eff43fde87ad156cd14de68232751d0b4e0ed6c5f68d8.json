{"ast":null,"code":"function changePasswordValidation(values) {\n  let errors = {\n    // isEmptyPass: \"\",\n    badLength: \"\",\n    noUppercaseChar: \"\",\n    noNumericalChar: \"\",\n    noSpecialChar: \"\"\n  };\n  const upperCase = /[A-Z]/;\n  const specialChar = /[!@#$%^&*]/;\n  const numericalChar = /[0-9]/;\n  if (values.password === \"\") {\n    errors.noUppercaseChar = \"Password must contain at least one uppercase letter\";\n    errors.noNumericalChar = \"Password must contain at least one numerical value\";\n    errors.noSpecialChar = \"Password must contain at least one special character\";\n    errors.badLength = \"Password must be minimum 8 characters long\";\n  }\n  if (!upperCase.test(values.password)) {\n    errors.noUppercaseChar = \"Password must contain at least one uppercase letter\";\n  }\n  if (!specialChar.test(values.password)) {\n    errors.noSpecialChar = \"Password must contain at least one special character\";\n  }\n  if (!numericalChar.test(values.password)) {\n    errors.noNumericalChar = \"Password must contain at least one numerical value\";\n  }\n  if (values.password.length < 8) {\n    errors.badLength = \"Password must be minimum 8 characters long\";\n  }\n  return errors;\n}\nexport default changePasswordValidation;","map":{"version":3,"names":["changePasswordValidation","values","errors","badLength","noUppercaseChar","noNumericalChar","noSpecialChar","upperCase","specialChar","numericalChar","password","test","length"],"sources":["C:/Users/Taariq/Documents/Projects/Git_Folder/Expense_Tracker_Project/frontend/src/validation/ChangePasswordValidation.js"],"sourcesContent":["function changePasswordValidation(values) {\r\n  let errors = {\r\n    // isEmptyPass: \"\",\r\n    badLength: \"\",\r\n    noUppercaseChar: \"\",\r\n    noNumericalChar: \"\",\r\n    noSpecialChar: \"\",\r\n  };\r\n\r\n  const upperCase = /[A-Z]/;\r\n  const specialChar = /[!@#$%^&*]/;\r\n  const numericalChar = /[0-9]/;\r\n\r\n  if (values.password === \"\") {\r\n    errors.noUppercaseChar =\r\n      \"Password must contain at least one uppercase letter\";\r\n    errors.noNumericalChar =\r\n      \"Password must contain at least one numerical value\";\r\n    errors.noSpecialChar =\r\n      \"Password must contain at least one special character\";\r\n    errors.badLength = \"Password must be minimum 8 characters long\";\r\n  }\r\n\r\n  if (!upperCase.test(values.password)) {\r\n    errors.noUppercaseChar =\r\n      \"Password must contain at least one uppercase letter\";\r\n  }\r\n\r\n  if (!specialChar.test(values.password)) {\r\n    errors.noSpecialChar =\r\n      \"Password must contain at least one special character\";\r\n  }\r\n\r\n  if (!numericalChar.test(values.password)) {\r\n    errors.noNumericalChar =\r\n      \"Password must contain at least one numerical value\";\r\n  }\r\n\r\n  if (values.password.length < 8) {\r\n    errors.badLength = \"Password must be minimum 8 characters long\";\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default changePasswordValidation;\r\n"],"mappings":"AAAA,SAASA,wBAAwBA,CAACC,MAAM,EAAE;EACxC,IAAIC,MAAM,GAAG;IACX;IACAC,SAAS,EAAE,EAAE;IACbC,eAAe,EAAE,EAAE;IACnBC,eAAe,EAAE,EAAE;IACnBC,aAAa,EAAE;EACjB,CAAC;EAED,MAAMC,SAAS,GAAG,OAAO;EACzB,MAAMC,WAAW,GAAG,YAAY;EAChC,MAAMC,aAAa,GAAG,OAAO;EAE7B,IAAIR,MAAM,CAACS,QAAQ,KAAK,EAAE,EAAE;IAC1BR,MAAM,CAACE,eAAe,GACpB,qDAAqD;IACvDF,MAAM,CAACG,eAAe,GACpB,oDAAoD;IACtDH,MAAM,CAACI,aAAa,GAClB,sDAAsD;IACxDJ,MAAM,CAACC,SAAS,GAAG,4CAA4C;EACjE;EAEA,IAAI,CAACI,SAAS,CAACI,IAAI,CAACV,MAAM,CAACS,QAAQ,CAAC,EAAE;IACpCR,MAAM,CAACE,eAAe,GACpB,qDAAqD;EACzD;EAEA,IAAI,CAACI,WAAW,CAACG,IAAI,CAACV,MAAM,CAACS,QAAQ,CAAC,EAAE;IACtCR,MAAM,CAACI,aAAa,GAClB,sDAAsD;EAC1D;EAEA,IAAI,CAACG,aAAa,CAACE,IAAI,CAACV,MAAM,CAACS,QAAQ,CAAC,EAAE;IACxCR,MAAM,CAACG,eAAe,GACpB,oDAAoD;EACxD;EAEA,IAAIJ,MAAM,CAACS,QAAQ,CAACE,MAAM,GAAG,CAAC,EAAE;IAC9BV,MAAM,CAACC,SAAS,GAAG,4CAA4C;EACjE;EAEA,OAAOD,MAAM;AACf;AAEA,eAAeF,wBAAwB"},"metadata":{},"sourceType":"module","externalDependencies":[]}